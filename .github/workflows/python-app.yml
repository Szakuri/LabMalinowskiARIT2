name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: some-group-name
    defaults: 
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with: 
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: false
        virtualenv-parallel: true
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/<path>/example-app/.venv
        key: ${{ runner.os }}-venv

  lint:
    needs: build
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./example-app
    
    steps:
    - uses: actions/checkout@v3    
    - name: Poetry Lint
      run: |
        poetry run task lint
        
  formatter:
      needs: build
      runs-on: ubuntu-latest
      defaults: 
        run:
          working-directory: ./example-app

      steps:
        - uses: actions/checkout@v3    
        - name: Poetry Formatter
          run: |
            poetry run task formatter


  security:
      needs: build
      runs-on: ubuntu-latest
      defaults: 
        run:
          working-directory: ./example-app

      steps:
        - uses: actions/checkout@v3    
        - name: Poetry Formatter
          run: |
            poetry run task security
      
    
      
      
